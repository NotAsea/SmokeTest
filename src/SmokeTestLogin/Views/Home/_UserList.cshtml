@using Cysharp.Text
@model TanvirArjel.EFCore.GenericRepository.PaginatedList<UserInfo>

@{
    Layout = null;
    const string pass = "*************";
    int[] sizes = [10, 15, 20, 25];
    using var str = ZString.CreateStringBuilder();
    foreach (var i in sizes)
    {
        var num = i.ToString();
        str.Append(
            ZString.Format(@"<option value=""{0}"" {1}>{2}</option>",
                num,
                SwitchLength(i, Model.Items.Count) ? "selected" : "",
                num));
    }

    var options = str.ToString();
}

@functions
{
    static bool SwitchLength(int x, int length) => (x, length) switch
    {
        (10, <= 10) => true,
        (15, > 10 and <= 15) => true,
        (20, > 15 and <= 20) => true,
        (25, > 20) => true,
        _ => false
    };
}

<style>
    .my-select {
        height: 37px;
        width: 100px;
    }
</style>
<script>
    document.getElementById("pageSize").addEventListener("change", (ev) => {
        loadTable(1, "", ev.target.value);
    })
</script>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">UserName</th>
            <th scope="col">Password</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Items)
        {
            var status = user.IsActivated ? "Active" : "Deactivated";
            var statusCss = user.IsActivated ? "bg-warning" : "bg-danger";
            <tr>
                <th class="border-end border-2" scope="row">@user.Id</th>
                <td class="border-end border-2">
                    @user.Name <br /> <span class="badge @statusCss">@status</span>
                </td>
                <td class="border-end border-2">@user.UserName</td>
                <td class="border-end border-2">@pass</td>
                <td class="border-end border-2">
                    <button class="btn btn-primary" onclick="edit(@user.Id)">Edit</button>
                    <button class="btn btn-primary" onclick="deleteUser(@user.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-end gap-1">
    <select id="pageSize"
            class="form-select form-select-sm my-select"
            aria-label="Default select example">
        @Html.Raw(options)
    </select>
    @if (Model.TotalPages > 1)
    {
        <nav>
            <ul class="pagination justify-content-end">
                <li class="page-item">
                    <button type="button" class="page-link" onclick="loadTable(1)" aria-label="Previous">
                        <span aria-hidden="true">&larr;</span>
                    </button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link" onclick="loadTable(-1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </button>
                </li>
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" : "")" tag-index="@i">
                        <button type="button" class="page-link" onclick="loadTable(@i)">@i</button>
                    </li>
                }
                <li class="page-item">
                    <button type="button" class="page-link" onclick="loadTable(-2)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link" onclick="loadTable(@Model.TotalPages)" aria-label="Next">
                        <span aria-hidden="true">&rarr;</span>
                    </button>
                </li>
            </ul>
        </nav>
        <div style="display: none" id="pageLimit" value="@Model.TotalPages"></div>
    }
</div>